{
  "name": "json-file-plus",
  "version": "3.3.0",
  "author": {
    "name": "Jordan Harband",
    "email": "ljharb@gmail.com",
    "url": "http://ljharb.codes"
  },
  "contributors": [
    {
      "name": "Jordan Harband",
      "email": "ljharb@gmail.com",
      "url": "http://ljharb.codes"
    }
  ],
  "description": "Read from and write to a JSON file, minimizing diffs and preserving formatting.",
  "license": "MIT",
  "main": "index.js",
  "scripts": {
    "pretest": "npm run --silent lint && evalmd README.md",
    "test": "npm run tests-only",
    "tests-only": "node test/test.js",
    "posttest": "npm run --silent security",
    "coverage": "covert test/test.js",
    "coverage-quiet": "covert test/test.js --quiet",
    "lint": "npm run jscs && npm run eslint",
    "eslint": "eslint *.js test/*.js",
    "jscs": "jscs *.js test/*.js",
    "security": "nsp check"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/ljharb/json-file-plus.git"
  },
  "keywords": [
    "json",
    "json file",
    "formatting",
    "read",
    "write",
    "promise",
    "promiseback"
  ],
  "dependencies": {
    "is": "^3.1.0",
    "node.extend": "^1.1.5",
    "promiseback": "^2.0.2"
  },
  "devDependencies": {
    "tape": "^4.5.1",
    "foreach": "^2.0.5",
    "object-keys": "^1.0.9",
    "covert": "^1.1.0",
    "jscs": "^2.11.0",
    "eslint": "^2.4.0",
    "@ljharb/eslint-config": "^2.1.1",
    "nsp": "^2.2.1",
    "evalmd": "^0.0.16"
  },
  "engines": {
    "node": ">= 0.4"
  },
  "readme": "#json-file-plus <sup>[![Version Badge][npm-version-svg]][npm-url]</sup>\n\n[![Build Status][travis-svg]][travis-url]\n[![dependency status][deps-svg]][deps-url]\n[![dev dependency status][dev-deps-svg]][dev-deps-url]\n[![License][license-image]][license-url]\n[![Downloads][downloads-image]][downloads-url]\n\n[![npm badge][npm-badge-png]][npm-url]\n\nA module to read from and write to JSON files, without losing formatting, to minimize diffs.\n\n## Example\n```js\nvar jsonFile = require('json-file-plus');\nvar path = require('path'); // in node-core\nvar filename = path.join(process.cwd(), 'package.json');\nvar callback = function (err, result) { /* your code here */ };\n\n/* Note: jsonFile also returns a Promise, if you prefer that to a Node-style callback (\"errorback\"). */\njsonFile(filename, function (err, file) {\n\tif (err) { return doSomethingWithError(err); }\n\n\tfile.data; // Direct access to the data from the file\n\tfile.format; // extracted formatting data. change at will.\n\n\tfile.get('version'); // get top-level keys. returns a Promise\n\tfile.get('version', callback); // get top-level keys. calls the errorback\n\tfile.get(); // get entire data. returns a Promise\n\tfile.get(callback); // get entire data. calls the errorback\n\n\t/* pass any plain object into \"set\" to merge in a deep copy */\n\t/* please note: references will be broken. */\n\t/* if a non-plain object is passed, will throw a TypeError. */\n\tfile.set({\n\t\tfoo: 'bar',\n\t\tbar: {\n\t\t\tbaz: true\n\t\t}\n\t});\n\t\n\tfile.remove('description'); // remove a specific key-value pair. returns a Promise\n    \tfile.remove('description', callback); // remove a specific key-value pair. calls the errorback\n\n\t/* change the filename if desired */\n\tfile.filename = path.join(process.cwd(), 'new-package.json');\n\n\t/* Save the file, preserving formatting. */\n\t/* Errorback will be passed to fs.writeFile */\n\t/* Returns a Promise. */\n\tfile.save(callback).then(function () {\n\t\tconsole.log('success!');\n\t}).catch(function (err) {\n\t\tconsole.log('error!', err);\n\t});\n});\n```\n\n## Tests\nSimply run `npm test` in the repo\n\n[npm-url]: https://npmjs.org/package/json-file-plus\n[npm-version-svg]: http://versionbadg.es/ljharb/json-file-plus.svg\n[travis-svg]: https://travis-ci.org/ljharb/json-file-plus.svg\n[travis-url]: https://travis-ci.org/ljharb/json-file-plus\n[deps-svg]: https://david-dm.org/ljharb/json-file-plus.svg\n[deps-url]: https://david-dm.org/ljharb/json-file-plus\n[dev-deps-svg]: https://david-dm.org/ljharb/json-file-plus/dev-status.svg\n[dev-deps-url]: https://david-dm.org/ljharb/json-file-plus#info=devDependencies\n[npm-badge-png]: https://nodei.co/npm/json-file-plus.png?downloads=true&stars=true\n[license-image]: http://img.shields.io/npm/l/json-file-plus.svg\n[license-url]: LICENSE\n[downloads-image]: http://img.shields.io/npm/dm/json-file-plus.svg\n[downloads-url]: http://npm-stat.com/charts.html?package=json-file-plus\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/ljharb/json-file-plus/issues"
  },
  "_id": "json-file-plus@3.3.0",
  "_from": "json-file-plus@^3.2.0"
}
